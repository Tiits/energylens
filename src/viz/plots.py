import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
from prophet.plot import plot_plotly


def plot_history(df, title: str = "Historical Consumption") -> go.Figure:
    """
    Plot historical consumption series.

    Args:
        df (pd.DataFrame): DataFrame with columns ['ds', 'y'].
        title (str): Chart title.

    Returns:
        go.Figure: Plotly Figure object for the historical series.
    """
    fig = px.line(
        df,
        x='ds',
        y='y',
        title=title,
        labels={'ds': 'Date', 'y': 'Consumption (kWh)'}
    )
    fig.update_layout(xaxis_title='Date', yaxis_title='Consumption (kWh)')
    return fig


def plot_forecast(model, forecast) -> go.Figure:
    """
    Plot forecasts generated by Prophet with confidence intervals.

    Args:
        model (Prophet): Trained Prophet model.
        forecast (pd.DataFrame): DataFrame returned by model.predict().

    Returns:
        go.Figure: Plotly Figure object combining historical and forecast data.
    """
    fig = plot_plotly(model, forecast)
    fig.update_layout(title='Forecast with Confidence Intervals')
    return fig


def plot_components(model, forecast) -> None:
    """
    Display Prophet components (trend and seasonality).

    Args:
        model (Prophet): Trained Prophet model.
        forecast (pd.DataFrame): Forecast DataFrame.
    """
    # Prophet does not offer a native Plotly plot_components,
    # so we use the default matplotlib method.
    model.plot_components(forecast)  # Directly displays the subplots
